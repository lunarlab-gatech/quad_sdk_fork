<launch>
  <arg name="robot_type" default="a1" />
  <arg name="multiple_robots" default="false" />
  <arg name="gui" default="true" />
  <arg name="paused" default="false" />
  <arg name="controller" default="inverse_dynamics" />
  <arg name="live_plot" default="false" />
  <arg name="dash" default="false" />
  <arg name="world" default="flat_100m" />
  <!-- <arg name="world" default="flat" /> -->
  <arg name="logging" default="false" />
  <param name="/use_sim_time" value="true" />
  <arg name="namespace"     default="robot_1"/>
  <arg name="init_pose"     default="-x 0.0 -y 0.0 -z 0.5"/>

  <!-- Launch the Quad world with specific physics parameters -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="$(arg paused)" />
    <arg name="world_name" value="$(find gazebo_scripts)/worlds/$(arg world)/$(arg world).world" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="physics" value="ode" />
    <arg name="verbose" value="$(arg gui)" />
    <!--<arg name="extra_gazebo_args" default="lockstep"/> -->
  </include>

  <include file="$(find quad_utils)/launch/mapping.launch">
    <arg name="input_type" value="mesh" />
    <arg name="world" value="$(arg world)" />
    <arg name="robot_type" value="$(arg robot_type)" />
  </include>

  <group if="$(eval arg('robot_type') == 'go2')">
    <rosparam command="load" file="$(find quad_utils)/config/go2.yaml" />
    <param name="robot_description_sdf" textfile="$(find go2_description)/sdf_mesh/go2.sdf" />
    <param name="robot_description" command="cat $(find go2_description)/urdf/go2.urdf" />
  </group>

  <!-- Spawn SDF model -->
  <node name="spawn_sdf_model" pkg="gazebo_ros" type="spawn_model" args="-sdf -param robot_description_sdf -model $(arg namespace) $(arg init_pose)" output="screen"/>


  <!-- Load the visualization tools -->
  <include file="$(find quad_utils)/launch/quad_visualization.launch">
    <arg name="robot_type" value="$(arg robot_type)" />
    <arg name="live_plot" value="$(arg live_plot)" />
    <arg name="dash" value="$(arg dash)" />
  </include>

</launch>